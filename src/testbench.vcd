$date
	Sun Mar 25 19:03:00 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! PCSrc_D $end
$var wire 5 " writeReg_W [4:0] $end
$var wire 5 # writeReg_M [4:0] $end
$var wire 5 $ writeReg_E [4:0] $end
$var wire 32 % writeData_M [31:0] $end
$var wire 32 & v0 [31:0] $end
$var wire 1 ' syscall_control $end
$var wire 1 ( stat_control $end
$var wire 32 ) signImm_E [31:0] $end
$var wire 32 * signImm_D [31:0] $end
$var wire 32 + readData_W [31:0] $end
$var wire 32 , readData_M [31:0] $end
$var wire 32 - ra [31:0] $end
$var wire 32 . number_instructions [31:0] $end
$var wire 32 / jumpAddr [31:0] $end
$var wire 1 0 jump $end
$var wire 1 1 jr_control $end
$var wire 32 2 jrMux_out [31:0] $end
$var wire 1 3 jal_control $end
$var wire 32 4 instr_F [31:0] $end
$var wire 32 5 instr_D [31:0] $end
$var wire 32 6 branch_mux_out [31:0] $end
$var wire 32 7 a0 [31:0] $end
$var wire 32 8 WriteData_E [31:0] $end
$var wire 2 9 WB_W [1:0] $end
$var wire 2 : WB_M [1:0] $end
$var wire 2 ; WB_E [1:0] $end
$var wire 2 < WB_D [1:0] $end
$var wire 1 = StallF $end
$var wire 1 > StallD $end
$var wire 32 ? SrcBE [31:0] $end
$var wire 32 @ SrcAE [31:0] $end
$var wire 5 A Rt_E [4:0] $end
$var wire 5 B Rs_E [4:0] $end
$var wire 32 C Result_W [31:0] $end
$var wire 5 D Rd_E [4:0] $end
$var wire 32 E RD2_E [31:0] $end
$var wire 32 F RD2_D [31:0] $end
$var wire 32 G RD2 [31:0] $end
$var wire 32 H RD1_E [31:0] $end
$var wire 32 I RD1_D [31:0] $end
$var wire 32 J RD1 [31:0] $end
$var wire 32 K PC_F [31:0] $end
$var wire 32 L PC_D [31:0] $end
$var wire 32 M PCPlus4_F [31:0] $end
$var wire 32 N PCPlus4_D [31:0] $end
$var wire 32 O PCBranch_D [31:0] $end
$var wire 32 P Next_PC [31:0] $end
$var wire 2 Q MEM_M [1:0] $end
$var wire 2 R MEM_E [1:0] $end
$var wire 2 S MEM_D [1:0] $end
$var wire 2 T ForwardBE [1:0] $end
$var wire 1 U ForwardBD $end
$var wire 2 V ForwardAE [1:0] $end
$var wire 1 W ForwardAD $end
$var wire 1 X FlushE $end
$var wire 1 Y EqualD $end
$var wire 5 Z EX_E [4:0] $end
$var wire 5 [ EX_D [4:0] $end
$var wire 1 \ BranchD $end
$var wire 32 ] ALUOut_W [31:0] $end
$var wire 32 ^ ALUOut_M [31:0] $end
$var wire 32 _ ALUOut_E [31:0] $end
$var reg 1 ` clk $end
$scope module ALU_block $end
$var wire 3 a ALUop [2:0] $end
$var wire 32 b reg2 [31:0] $end
$var wire 32 c reg1 [31:0] $end
$var reg 32 d ALUresult [31:0] $end
$upscope $end
$scope module ExMem $end
$var wire 32 e ALUOut_E [31:0] $end
$var wire 1 ` clk $end
$var wire 5 f WriteReg_E [4:0] $end
$var wire 32 g WriteData_E [31:0] $end
$var wire 2 h WB_E [1:0] $end
$var wire 2 i MEM_E [1:0] $end
$var wire 1 X FlushE $end
$var reg 32 j ALUOut_M [31:0] $end
$var reg 2 k MEM_M [1:0] $end
$var reg 2 l WB_M [1:0] $end
$var reg 32 m WriteData_M [31:0] $end
$var reg 5 n WriteReg_M [4:0] $end
$upscope $end
$scope module IdEx $end
$var wire 5 o Rd_D [4:0] $end
$var wire 5 p Rs_D [4:0] $end
$var wire 5 q Rt_D [4:0] $end
$var wire 1 ` clk $end
$var wire 2 r WB_D [1:0] $end
$var wire 32 s SignImm_D [31:0] $end
$var wire 32 t RD2_D [31:0] $end
$var wire 32 u RD1_D [31:0] $end
$var wire 2 v MEM_D [1:0] $end
$var wire 1 X FlushE $end
$var wire 5 w EX_D [4:0] $end
$var reg 5 x EX_E [4:0] $end
$var reg 2 y MEM_E [1:0] $end
$var reg 32 z RD1_E [31:0] $end
$var reg 32 { RD2_E [31:0] $end
$var reg 5 | Rd_E [4:0] $end
$var reg 5 } Rs_E [4:0] $end
$var reg 5 ~ Rt_E [4:0] $end
$var reg 32 !" SignImm_E [31:0] $end
$var reg 2 "" WB_E [1:0] $end
$upscope $end
$scope module IfId $end
$var wire 1 ! PCSrcD $end
$var wire 1 ` clk $end
$var wire 1 > StallD $end
$var wire 32 #" PC_Plus4_F [31:0] $end
$var wire 32 $" PC_F [31:0] $end
$var wire 32 %" Instr_F [31:0] $end
$var reg 32 &" Instr_D [31:0] $end
$var reg 32 '" PC_D [31:0] $end
$var reg 32 (" PC_Plus4_D [31:0] $end
$upscope $end
$scope module JumpAddr_block $end
$var wire 32 )" PCplus4 [31:0] $end
$var wire 32 *" instr [31:0] $end
$var wire 32 +" jumpAddr [31:0] $end
$upscope $end
$scope module MemWb $end
$var wire 32 ," ALUOut_M [31:0] $end
$var wire 2 -" WB_M [1:0] $end
$var wire 5 ." WriteReg_M [4:0] $end
$var wire 1 ` clk $end
$var wire 32 /" ReadData_M [31:0] $end
$var reg 32 0" ALUOut_W [31:0] $end
$var reg 32 1" ReadData_W [31:0] $end
$var reg 2 2" WB_W [1:0] $end
$var reg 5 3" WriteReg_W [4:0] $end
$upscope $end
$scope module MuxRD1 $end
$var wire 32 4" mux_in_1 [31:0] $end
$var wire 1 W select $end
$var wire 32 5" mux_in_0 [31:0] $end
$var reg 32 6" mux_out [31:0] $end
$upscope $end
$scope module MuxRD2 $end
$var wire 32 7" mux_in_1 [31:0] $end
$var wire 1 U select $end
$var wire 32 8" mux_in_0 [31:0] $end
$var reg 32 9" mux_out [31:0] $end
$upscope $end
$scope module PC_block $end
$var wire 1 ` clk $end
$var wire 32 :" nextPC [31:0] $end
$var wire 1 = StallF $end
$var reg 32 ;" currPC [31:0] $end
$upscope $end
$scope module PCadd4 $end
$var wire 32 <" currPC [31:0] $end
$var wire 32 =" PCplus4 [31:0] $end
$upscope $end
$scope module aluMux $end
$var wire 32 >" mux_in_1 [31:0] $end
$var wire 1 ?" select $end
$var wire 32 @" mux_in_0 [31:0] $end
$var reg 32 A" mux_out [31:0] $end
$upscope $end
$scope module aluSrcAMux $end
$var wire 32 B" mux_in_0 [31:0] $end
$var wire 32 C" mux_in_2 [31:0] $end
$var wire 2 D" select [1:0] $end
$var wire 32 E" mux_in_1 [31:0] $end
$var reg 32 F" mux_out [31:0] $end
$upscope $end
$scope module aluSrcBMux $end
$var wire 32 G" mux_in_0 [31:0] $end
$var wire 32 H" mux_in_2 [31:0] $end
$var wire 2 I" select [1:0] $end
$var wire 32 J" mux_in_1 [31:0] $end
$var reg 32 K" mux_out [31:0] $end
$upscope $end
$scope module branchAdder $end
$var wire 32 L" PC_Plus4 [31:0] $end
$var wire 32 M" signExtendedImmediate [31:0] $end
$var reg 32 N" out [31:0] $end
$upscope $end
$scope module branchMux $end
$var wire 32 O" mux_in_1 [31:0] $end
$var wire 1 ! select $end
$var wire 32 P" mux_in_0 [31:0] $end
$var reg 32 Q" mux_out [31:0] $end
$upscope $end
$scope module branch_control $end
$var wire 1 Y zero $end
$var wire 1 \ branch $end
$var reg 1 R" and_out $end
$upscope $end
$scope module control_block $end
$var wire 32 S" instr [31:0] $end
$var reg 3 T" ALUop [2:0] $end
$var reg 1 U" ALUsrc $end
$var reg 1 V" Branch $end
$var reg 5 W" EX_D [4:0] $end
$var reg 1 X" Jump $end
$var reg 2 Y" MEM_D [1:0] $end
$var reg 1 Z" MemRead $end
$var reg 1 [" MemToReg $end
$var reg 1 \" MemWrite $end
$var reg 1 ]" RegDst $end
$var reg 1 ^" RegWrite $end
$var reg 2 _" WB_D [1:0] $end
$var reg 1 \ branch $end
$var reg 1 3 jal_control $end
$var reg 1 1 jr_control $end
$var reg 1 0 jump $end
$var reg 1 ' syscall_control $end
$upscope $end
$scope module dataMem $end
$var wire 32 `" SyscallRead [31:0] $end
$var wire 32 a" address [31:0] $end
$var wire 1 ` clk $end
$var wire 1 b" memRead $end
$var wire 1 c" memWrite $end
$var wire 32 d" writeData [31:0] $end
$var reg 32 e" readData [31:0] $end
$upscope $end
$scope module hazard $end
$var wire 1 \ BranchD $end
$var wire 1 f" MemReadE $end
$var wire 1 g" MemReadM $end
$var wire 1 h" MemtoRegE $end
$var wire 1 i" MemtoRegM $end
$var wire 1 j" RegWriteE $end
$var wire 1 k" RegWriteM $end
$var wire 1 l" RegWriteW $end
$var wire 5 m" RsD [4:0] $end
$var wire 5 n" RsE [4:0] $end
$var wire 5 o" RtD [4:0] $end
$var wire 5 p" RtE [4:0] $end
$var wire 5 q" WriteRegM [4:0] $end
$var wire 5 r" WriteRegW [4:0] $end
$var wire 5 s" WriteRegE [4:0] $end
$var reg 1 X FlushE $end
$var reg 1 W ForwardAD $end
$var reg 2 t" ForwardAE [1:0] $end
$var reg 1 U ForwardBD $end
$var reg 2 u" ForwardBE [1:0] $end
$var reg 1 > StallD $end
$var reg 1 = StallF $end
$var reg 1 v" branchstall $end
$var reg 1 w" lwstall $end
$upscope $end
$scope module instructionMemory $end
$var wire 32 x" currPC [31:0] $end
$var reg 32 y" instr [31:0] $end
$var reg 32 z" number_instructions [31:0] $end
$upscope $end
$scope module jrMux $end
$var wire 32 {" mux_in_0 [31:0] $end
$var wire 1 1 select $end
$var wire 32 |" mux_in_1 [31:0] $end
$var reg 32 }" mux_out [31:0] $end
$upscope $end
$scope module jumpMux $end
$var wire 32 ~" mux_in_0 [31:0] $end
$var wire 32 !# mux_in_1 [31:0] $end
$var wire 1 0 select $end
$var reg 32 "# mux_out [31:0] $end
$upscope $end
$scope module memToRegMux $end
$var wire 32 ## mux_in_0 [31:0] $end
$var wire 32 $# mux_in_1 [31:0] $end
$var wire 1 %# select $end
$var reg 32 &# mux_out [31:0] $end
$upscope $end
$scope module regEqual $end
$var wire 32 '# input1 [31:0] $end
$var wire 32 (# input2 [31:0] $end
$var reg 1 Y equalD $end
$upscope $end
$scope module reg_block $end
$var wire 1 )# RegWrite $end
$var wire 32 *# a0 [31:0] $end
$var wire 1 ` clk $end
$var wire 32 +# jal_address [31:0] $end
$var wire 1 3 jal_control $end
$var wire 32 ,# ra [31:0] $end
$var wire 5 -# readReg1 [4:0] $end
$var wire 5 .# readReg2 [4:0] $end
$var wire 32 /# v0 [31:0] $end
$var wire 32 0# writeData [31:0] $end
$var wire 5 1# writeReg [4:0] $end
$var reg 32 2# readData1 [31:0] $end
$var reg 32 3# readData2 [31:0] $end
$var integer 32 4# i [31:0] $end
$upscope $end
$scope module registerMux $end
$var wire 5 5# mux_in_0 [4:0] $end
$var wire 5 6# mux_in_1 [4:0] $end
$var wire 1 7# select $end
$var reg 5 8# mux_out [4:0] $end
$upscope $end
$scope module runStats $end
$var wire 1 ` clk $end
$var wire 32 9# number_instructions [31:0] $end
$var wire 1 ( stat_control $end
$var reg 32 :# number_cycles [31:0] $end
$upscope $end
$scope module signExtend_block $end
$var wire 32 ;# instr [31:0] $end
$var reg 32 <# out_value [31:0] $end
$upscope $end
$scope module testSyscall $end
$var wire 32 =# a0 [31:0] $end
$var wire 1 ' syscall_control $end
$var wire 32 ># v0 [31:0] $end
$var reg 1 ( stat_control $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 >#
b0 =#
b0 <#
b0 ;#
b1 :#
b1 9#
b0 8#
17#
b0 6#
b0 5#
b100000 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
b0 -#
b0 ,#
b1000 +#
b0 *#
1)#
b0 (#
b0 '#
b0 &#
0%#
bx $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b1 z"
b100100000010000000000000000001 y"
b10000000000000000100000 x"
0w"
xv"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
0l"
0k"
1j"
0i"
0h"
0g"
0f"
bx e"
b0 d"
0c"
0b"
bx a"
bz `"
b10 _"
1^"
1]"
0\"
0["
0Z"
b0 Y"
0X"
b10xxx W"
0V"
0U"
bx T"
b0 S"
0R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
bx K"
b0 J"
b0 I"
bx H"
bx G"
bx F"
b0 E"
b0 D"
bx C"
bx B"
bx A"
bx @"
0?"
b0 >"
b10000000000000000100100 ="
b10000000000000000100000 <"
b10000000000000000100000 ;"
b0 :"
b0 9"
b0 8"
bx 7"
b0 6"
b0 5"
bx 4"
b0 3"
b0 2"
bx 1"
b0 0"
bx /"
b0 ."
b0 -"
bx ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b100100000010000000000000000001 %"
b10000000000000000100000 $"
b10000000000000000100100 #"
b10 ""
b0 !"
b0 ~
b0 }
b0 |
bx {
bx z
b0 y
b10xxx x
b10xxx w
b0 v
b0 u
b0 t
b0 s
b10 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
bx j
b0 i
b10 h
bx g
b0 f
b0 e
b0 d
bx c
bx b
bx a
1`
b0 _
bx ^
b0 ]
x\
b10xxx [
b10xxx Z
1Y
xX
0W
b0 V
0U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b10000000000000000100100 M
b0 L
b10000000000000000100000 K
b0 J
b0 I
bx H
b0 G
b0 F
bx E
b0 D
b0 C
b0 B
b0 A
bx @
bx ?
x>
x=
b10 <
b10 ;
b0 :
b0 9
bx 8
b0 7
b0 6
b0 5
b100100000010000000000000000001 4
03
b0 2
01
x0
b0 /
b1 .
b0 -
bx ,
bx +
b0 *
b0 )
0(
0'
b0 &
b0 %
b0 $
b0 #
b0 "
0!
$end
#10
0`
#20
b1000000000000000000100 P
b1000000000000000000100 :"
b1000000000000000000100 "#
b0 ?
b0 b
b0 A"
b10000000000000000100100 6
b10000000000000000100100 Q"
b10000000000000000100100 ~"
b1000000000000000000100 /
b1000000000000000000100 +"
b1000000000000000000100 !#
1l"
1k"
b0 8
b0 g
b0 @"
b0 K"
b0 @
b0 c
b0 F"
b10000000000000000101000 O
b10000000000000000101000 N"
b10000000000000000101000 O"
b10000000000000000100100 2
b10000000000000000100100 P"
b10000000000000000100100 }"
b1010 [
b1010 w
b1010 W"
1U"
1^"
b10 T"
0]"
b1 *
b1 s
b1 M"
b1 <#
b1000 q
b1000 .#
b1000 o"
b10 :#
b10 9
b10 2"
b0 #
b0 n
b0 ."
b0 q"
b0 ^
b0 j
b0 ,"
b0 4"
b0 7"
b0 C"
b0 H"
b0 a"
b10 :
b10 l
b10 -"
b0 E
b0 {
b0 G"
b0 H
b0 z
b0 B"
b10000000000000000100100 N
b10000000000000000100100 ("
b10000000000000000100100 )"
b10000000000000000100100 L"
b10000000000000000100100 {"
b100100000010000000000000000001 5
b100100000010000000000000000001 &"
b100100000010000000000000000001 *"
b100100000010000000000000000001 S"
b100100000010000000000000000001 ;#
b10000000000000000101000 +#
b10000000000000000100000 L
b10000000000000000100000 '"
1`
#30
0`
#40
b1 _
b1 d
b1 e
b1 ?
b1 b
b1 A"
b1000 $
b1000 f
b1000 s"
b1000 8#
b10 a
1?"
07#
b1 )
b1 !"
b1 >"
b1000 A
b1000 ~
b1000 p"
b1000 5#
b1010 Z
b1010 x
b11 :#
1`
#50
0`
#60
0Y
b1 8
b1 g
b1 @"
b1 K"
b1 F
b1 t
b1 9"
b1 (#
b1 C
b1 E"
b1 J"
b1 &#
b1 0#
b10 T
b10 I"
b10 u"
1U
b100 :#
b1000 "
b1000 3"
b1000 r"
b1000 1#
b1 ]
b1 0"
b1 ##
b1000 #
b1000 n
b1000 ."
b1000 q"
b1 ^
b1 j
b1 ,"
b1 4"
b1 7"
b1 C"
b1 H"
b1 a"
1`
#70
0`
#80
b1 E
b1 {
b1 G"
b1000 #
b1000 n
b1000 ."
b1000 q"
b101 :#
1`
#90
0`
#100
b110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#110
0`
#120
b1000 #
b1000 n
b1000 ."
b1000 q"
b111 :#
1`
#130
0`
#140
b1000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#150
0`
#160
b1000 #
b1000 n
b1000 ."
b1000 q"
b1001 :#
1`
#170
0`
#180
b1010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#190
0`
#200
b1000 #
b1000 n
b1000 ."
b1000 q"
b1011 :#
1`
#210
0`
#220
b1100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#230
0`
#240
b1000 #
b1000 n
b1000 ."
b1000 q"
b1101 :#
1`
#250
0`
#260
b1110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#270
0`
#280
b1000 #
b1000 n
b1000 ."
b1000 q"
b1111 :#
1`
#290
0`
#300
b10000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#310
0`
#320
b1000 #
b1000 n
b1000 ."
b1000 q"
b10001 :#
1`
#330
0`
#340
b10010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#350
0`
#360
b1000 #
b1000 n
b1000 ."
b1000 q"
b10011 :#
1`
#370
0`
#380
b10100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#390
0`
#400
b1000 #
b1000 n
b1000 ."
b1000 q"
b10101 :#
1`
#410
0`
#420
b10110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#430
0`
#440
b1000 #
b1000 n
b1000 ."
b1000 q"
b10111 :#
1`
#450
0`
#460
b11000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#470
0`
#480
b1000 #
b1000 n
b1000 ."
b1000 q"
b11001 :#
1`
#490
0`
#500
b11010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#510
0`
#520
b1000 #
b1000 n
b1000 ."
b1000 q"
b11011 :#
1`
#530
0`
#540
b11100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#550
0`
#560
b1000 #
b1000 n
b1000 ."
b1000 q"
b11101 :#
1`
#570
0`
#580
b11110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#590
0`
#600
b1000 #
b1000 n
b1000 ."
b1000 q"
b11111 :#
1`
#610
0`
#620
b100000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#630
0`
#640
b1000 #
b1000 n
b1000 ."
b1000 q"
b100001 :#
1`
#650
0`
#660
b100010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#670
0`
#680
b1000 #
b1000 n
b1000 ."
b1000 q"
b100011 :#
1`
#690
0`
#700
b100100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#710
0`
#720
b1000 #
b1000 n
b1000 ."
b1000 q"
b100101 :#
1`
#730
0`
#740
b100110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#750
0`
#760
b1000 #
b1000 n
b1000 ."
b1000 q"
b100111 :#
1`
#770
0`
#780
b101000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#790
0`
#800
b1000 #
b1000 n
b1000 ."
b1000 q"
b101001 :#
1`
#810
0`
#820
b101010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#830
0`
#840
b1000 #
b1000 n
b1000 ."
b1000 q"
b101011 :#
1`
#850
0`
#860
b101100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#870
0`
#880
b1000 #
b1000 n
b1000 ."
b1000 q"
b101101 :#
1`
#890
0`
#900
b101110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#910
0`
#920
b1000 #
b1000 n
b1000 ."
b1000 q"
b101111 :#
1`
#930
0`
#940
b110000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#950
0`
#960
b1000 #
b1000 n
b1000 ."
b1000 q"
b110001 :#
1`
#970
0`
#980
b110010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#990
0`
#1000
b1000 #
b1000 n
b1000 ."
b1000 q"
b110011 :#
1`
#1010
0`
#1020
b110100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1030
0`
#1040
b1000 #
b1000 n
b1000 ."
b1000 q"
b110101 :#
1`
#1050
0`
#1060
b110110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1070
0`
#1080
b1000 #
b1000 n
b1000 ."
b1000 q"
b110111 :#
1`
#1090
0`
#1100
b111000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1110
0`
#1120
b1000 #
b1000 n
b1000 ."
b1000 q"
b111001 :#
1`
#1130
0`
#1140
b111010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1150
0`
#1160
b1000 #
b1000 n
b1000 ."
b1000 q"
b111011 :#
1`
#1170
0`
#1180
b111100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1190
0`
#1200
b1000 #
b1000 n
b1000 ."
b1000 q"
b111101 :#
1`
#1210
0`
#1220
b111110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1230
0`
#1240
b1000 #
b1000 n
b1000 ."
b1000 q"
b111111 :#
1`
#1250
0`
#1260
b1000000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1270
0`
#1280
b1000 #
b1000 n
b1000 ."
b1000 q"
b1000001 :#
1`
#1290
0`
#1300
b1000010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1310
0`
#1320
b1000 #
b1000 n
b1000 ."
b1000 q"
b1000011 :#
1`
#1330
0`
#1340
b1000100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1350
0`
#1360
b1000 #
b1000 n
b1000 ."
b1000 q"
b1000101 :#
1`
#1370
0`
#1380
b1000110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1390
0`
#1400
b1000 #
b1000 n
b1000 ."
b1000 q"
b1000111 :#
1`
#1410
0`
#1420
b1001000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1430
0`
#1440
b1000 #
b1000 n
b1000 ."
b1000 q"
b1001001 :#
1`
#1450
0`
#1460
b1001010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1470
0`
#1480
b1000 #
b1000 n
b1000 ."
b1000 q"
b1001011 :#
1`
#1490
0`
#1500
b1001100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1510
0`
#1520
b1000 #
b1000 n
b1000 ."
b1000 q"
b1001101 :#
1`
#1530
0`
#1540
b1001110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1550
0`
#1560
b1000 #
b1000 n
b1000 ."
b1000 q"
b1001111 :#
1`
#1570
0`
#1580
b1010000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1590
0`
#1600
b1000 #
b1000 n
b1000 ."
b1000 q"
b1010001 :#
1`
#1610
0`
#1620
b1010010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1630
0`
#1640
b1000 #
b1000 n
b1000 ."
b1000 q"
b1010011 :#
1`
#1650
0`
#1660
b1010100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1670
0`
#1680
b1000 #
b1000 n
b1000 ."
b1000 q"
b1010101 :#
1`
#1690
0`
#1700
b1010110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1710
0`
#1720
b1000 #
b1000 n
b1000 ."
b1000 q"
b1010111 :#
1`
#1730
0`
#1740
b1011000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1750
0`
#1760
b1000 #
b1000 n
b1000 ."
b1000 q"
b1011001 :#
1`
#1770
0`
#1780
b1011010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1790
0`
#1800
b1000 #
b1000 n
b1000 ."
b1000 q"
b1011011 :#
1`
#1810
0`
#1820
b1011100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1830
0`
#1840
b1000 #
b1000 n
b1000 ."
b1000 q"
b1011101 :#
1`
#1850
0`
#1860
b1011110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1870
0`
#1880
b1000 #
b1000 n
b1000 ."
b1000 q"
b1011111 :#
1`
#1890
0`
#1900
b1100000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1910
0`
#1920
b1000 #
b1000 n
b1000 ."
b1000 q"
b1100001 :#
1`
#1930
0`
#1940
b1100010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1950
0`
#1960
b1000 #
b1000 n
b1000 ."
b1000 q"
b1100011 :#
1`
#1970
0`
#1980
b1100100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#1990
0`
#2000
b1000 #
b1000 n
b1000 ."
b1000 q"
b1100101 :#
1`
#2010
0`
#2020
b1100110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2030
0`
#2040
b1000 #
b1000 n
b1000 ."
b1000 q"
b1100111 :#
1`
#2050
0`
#2060
b1101000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2070
0`
#2080
b1000 #
b1000 n
b1000 ."
b1000 q"
b1101001 :#
1`
#2090
0`
#2100
b1101010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2110
0`
#2120
b1000 #
b1000 n
b1000 ."
b1000 q"
b1101011 :#
1`
#2130
0`
#2140
b1101100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2150
0`
#2160
b1000 #
b1000 n
b1000 ."
b1000 q"
b1101101 :#
1`
#2170
0`
#2180
b1101110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2190
0`
#2200
b1000 #
b1000 n
b1000 ."
b1000 q"
b1101111 :#
1`
#2210
0`
#2220
b1110000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2230
0`
#2240
b1000 #
b1000 n
b1000 ."
b1000 q"
b1110001 :#
1`
#2250
0`
#2260
b1110010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2270
0`
#2280
b1000 #
b1000 n
b1000 ."
b1000 q"
b1110011 :#
1`
#2290
0`
#2300
b1110100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2310
0`
#2320
b1000 #
b1000 n
b1000 ."
b1000 q"
b1110101 :#
1`
#2330
0`
#2340
b1110110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2350
0`
#2360
b1000 #
b1000 n
b1000 ."
b1000 q"
b1110111 :#
1`
#2370
0`
#2380
b1111000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2390
0`
#2400
b1000 #
b1000 n
b1000 ."
b1000 q"
b1111001 :#
1`
#2410
0`
#2420
b1111010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2430
0`
#2440
b1000 #
b1000 n
b1000 ."
b1000 q"
b1111011 :#
1`
#2450
0`
#2460
b1111100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2470
0`
#2480
b1000 #
b1000 n
b1000 ."
b1000 q"
b1111101 :#
1`
#2490
0`
#2500
b1111110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2510
0`
#2520
b1000 #
b1000 n
b1000 ."
b1000 q"
b1111111 :#
1`
#2530
0`
#2540
b10000000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2550
0`
#2560
b1000 #
b1000 n
b1000 ."
b1000 q"
b10000001 :#
1`
#2570
0`
#2580
b10000010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2590
0`
#2600
b1000 #
b1000 n
b1000 ."
b1000 q"
b10000011 :#
1`
#2610
0`
#2620
b10000100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2630
0`
#2640
b1000 #
b1000 n
b1000 ."
b1000 q"
b10000101 :#
1`
#2650
0`
#2660
b10000110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2670
0`
#2680
b1000 #
b1000 n
b1000 ."
b1000 q"
b10000111 :#
1`
#2690
0`
#2700
b10001000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2710
0`
#2720
b1000 #
b1000 n
b1000 ."
b1000 q"
b10001001 :#
1`
#2730
0`
#2740
b10001010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2750
0`
#2760
b1000 #
b1000 n
b1000 ."
b1000 q"
b10001011 :#
1`
#2770
0`
#2780
b10001100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2790
0`
#2800
b1000 #
b1000 n
b1000 ."
b1000 q"
b10001101 :#
1`
#2810
0`
#2820
b10001110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2830
0`
#2840
b1000 #
b1000 n
b1000 ."
b1000 q"
b10001111 :#
1`
#2850
0`
#2860
b10010000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2870
0`
#2880
b1000 #
b1000 n
b1000 ."
b1000 q"
b10010001 :#
1`
#2890
0`
#2900
b10010010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2910
0`
#2920
b1000 #
b1000 n
b1000 ."
b1000 q"
b10010011 :#
1`
#2930
0`
#2940
b10010100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2950
0`
#2960
b1000 #
b1000 n
b1000 ."
b1000 q"
b10010101 :#
1`
#2970
0`
#2980
b10010110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#2990
0`
#3000
b1000 #
b1000 n
b1000 ."
b1000 q"
b10010111 :#
1`
#3010
0`
#3020
b10011000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3030
0`
#3040
b1000 #
b1000 n
b1000 ."
b1000 q"
b10011001 :#
1`
#3050
0`
#3060
b10011010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3070
0`
#3080
b1000 #
b1000 n
b1000 ."
b1000 q"
b10011011 :#
1`
#3090
0`
#3100
b10011100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3110
0`
#3120
b1000 #
b1000 n
b1000 ."
b1000 q"
b10011101 :#
1`
#3130
0`
#3140
b10011110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3150
0`
#3160
b1000 #
b1000 n
b1000 ."
b1000 q"
b10011111 :#
1`
#3170
0`
#3180
b10100000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3190
0`
#3200
b1000 #
b1000 n
b1000 ."
b1000 q"
b10100001 :#
1`
#3210
0`
#3220
b10100010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3230
0`
#3240
b1000 #
b1000 n
b1000 ."
b1000 q"
b10100011 :#
1`
#3250
0`
#3260
b10100100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3270
0`
#3280
b1000 #
b1000 n
b1000 ."
b1000 q"
b10100101 :#
1`
#3290
0`
#3300
b10100110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3310
0`
#3320
b1000 #
b1000 n
b1000 ."
b1000 q"
b10100111 :#
1`
#3330
0`
#3340
b10101000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3350
0`
#3360
b1000 #
b1000 n
b1000 ."
b1000 q"
b10101001 :#
1`
#3370
0`
#3380
b10101010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3390
0`
#3400
b1000 #
b1000 n
b1000 ."
b1000 q"
b10101011 :#
1`
#3410
0`
#3420
b10101100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3430
0`
#3440
b1000 #
b1000 n
b1000 ."
b1000 q"
b10101101 :#
1`
#3450
0`
#3460
b10101110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3470
0`
#3480
b1000 #
b1000 n
b1000 ."
b1000 q"
b10101111 :#
1`
#3490
0`
#3500
b10110000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3510
0`
#3520
b1000 #
b1000 n
b1000 ."
b1000 q"
b10110001 :#
1`
#3530
0`
#3540
b10110010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3550
0`
#3560
b1000 #
b1000 n
b1000 ."
b1000 q"
b10110011 :#
1`
#3570
0`
#3580
b10110100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3590
0`
#3600
b1000 #
b1000 n
b1000 ."
b1000 q"
b10110101 :#
1`
#3610
0`
#3620
b10110110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3630
0`
#3640
b1000 #
b1000 n
b1000 ."
b1000 q"
b10110111 :#
1`
#3650
0`
#3660
b10111000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3670
0`
#3680
b1000 #
b1000 n
b1000 ."
b1000 q"
b10111001 :#
1`
#3690
0`
#3700
b10111010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3710
0`
#3720
b1000 #
b1000 n
b1000 ."
b1000 q"
b10111011 :#
1`
#3730
0`
#3740
b10111100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3750
0`
#3760
b1000 #
b1000 n
b1000 ."
b1000 q"
b10111101 :#
1`
#3770
0`
#3780
b10111110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3790
0`
#3800
b1000 #
b1000 n
b1000 ."
b1000 q"
b10111111 :#
1`
#3810
0`
#3820
b11000000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3830
0`
#3840
b1000 #
b1000 n
b1000 ."
b1000 q"
b11000001 :#
1`
#3850
0`
#3860
b11000010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3870
0`
#3880
b1000 #
b1000 n
b1000 ."
b1000 q"
b11000011 :#
1`
#3890
0`
#3900
b11000100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3910
0`
#3920
b1000 #
b1000 n
b1000 ."
b1000 q"
b11000101 :#
1`
#3930
0`
#3940
b11000110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3950
0`
#3960
b1000 #
b1000 n
b1000 ."
b1000 q"
b11000111 :#
1`
#3970
0`
#3980
b11001000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#3990
0`
#4000
b1000 #
b1000 n
b1000 ."
b1000 q"
b11001001 :#
1`
#4010
0`
#4020
b11001010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4030
0`
#4040
b1000 #
b1000 n
b1000 ."
b1000 q"
b11001011 :#
1`
#4050
0`
#4060
b11001100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4070
0`
#4080
b1000 #
b1000 n
b1000 ."
b1000 q"
b11001101 :#
1`
#4090
0`
#4100
b11001110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4110
0`
#4120
b1000 #
b1000 n
b1000 ."
b1000 q"
b11001111 :#
1`
#4130
0`
#4140
b11010000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4150
0`
#4160
b1000 #
b1000 n
b1000 ."
b1000 q"
b11010001 :#
1`
#4170
0`
#4180
b11010010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4190
0`
#4200
b1000 #
b1000 n
b1000 ."
b1000 q"
b11010011 :#
1`
#4210
0`
#4220
b11010100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4230
0`
#4240
b1000 #
b1000 n
b1000 ."
b1000 q"
b11010101 :#
1`
#4250
0`
#4260
b11010110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4270
0`
#4280
b1000 #
b1000 n
b1000 ."
b1000 q"
b11010111 :#
1`
#4290
0`
#4300
b11011000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4310
0`
#4320
b1000 #
b1000 n
b1000 ."
b1000 q"
b11011001 :#
1`
#4330
0`
#4340
b11011010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4350
0`
#4360
b1000 #
b1000 n
b1000 ."
b1000 q"
b11011011 :#
1`
#4370
0`
#4380
b11011100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4390
0`
#4400
b1000 #
b1000 n
b1000 ."
b1000 q"
b11011101 :#
1`
#4410
0`
#4420
b11011110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4430
0`
#4440
b1000 #
b1000 n
b1000 ."
b1000 q"
b11011111 :#
1`
#4450
0`
#4460
b11100000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4470
0`
#4480
b1000 #
b1000 n
b1000 ."
b1000 q"
b11100001 :#
1`
#4490
0`
#4500
b11100010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4510
0`
#4520
b1000 #
b1000 n
b1000 ."
b1000 q"
b11100011 :#
1`
#4530
0`
#4540
b11100100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4550
0`
#4560
b1000 #
b1000 n
b1000 ."
b1000 q"
b11100101 :#
1`
#4570
0`
#4580
b11100110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4590
0`
#4600
b1000 #
b1000 n
b1000 ."
b1000 q"
b11100111 :#
1`
#4610
0`
#4620
b11101000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4630
0`
#4640
b1000 #
b1000 n
b1000 ."
b1000 q"
b11101001 :#
1`
#4650
0`
#4660
b11101010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4670
0`
#4680
b1000 #
b1000 n
b1000 ."
b1000 q"
b11101011 :#
1`
#4690
0`
#4700
b11101100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4710
0`
#4720
b1000 #
b1000 n
b1000 ."
b1000 q"
b11101101 :#
1`
#4730
0`
#4740
b11101110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4750
0`
#4760
b1000 #
b1000 n
b1000 ."
b1000 q"
b11101111 :#
1`
#4770
0`
#4780
b11110000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4790
0`
#4800
b1000 #
b1000 n
b1000 ."
b1000 q"
b11110001 :#
1`
#4810
0`
#4820
b11110010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4830
0`
#4840
b1000 #
b1000 n
b1000 ."
b1000 q"
b11110011 :#
1`
#4850
0`
#4860
b11110100 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4870
0`
#4880
b1000 #
b1000 n
b1000 ."
b1000 q"
b11110101 :#
1`
#4890
0`
#4900
b11110110 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4910
0`
#4920
b1000 #
b1000 n
b1000 ."
b1000 q"
b11110111 :#
1`
#4930
0`
#4940
b11111000 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4950
0`
#4960
b1000 #
b1000 n
b1000 ."
b1000 q"
b11111001 :#
1`
#4970
0`
#4980
b11111010 :#
b1000 #
b1000 n
b1000 ."
b1000 q"
1`
#4990
0`
#5000
b1000 #
b1000 n
b1000 ."
b1000 q"
b11111011 :#
1`
